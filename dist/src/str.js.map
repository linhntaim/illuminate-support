{"version":3,"sources":["../../src/str.js"],"names":["Str","snakeCache","camelCache","studlyCache","str","test","charAt","toLowerCase","substr","str1","str2","length","substring","delimiters","replace","RegExp","$1","toUpperCase","subject","search","position","indexOf","lastIndexOf","split","from","to","beforeLast","after","value","lcfirst","studly","haystack","needles","some","needle","every","contains","delimiter","key","ctypeLower","ucwords","strncmp"],"mappings":"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","sourcesContent":["class Str {\r\n    constructor() {\r\n        this.snakeCache = {}\r\n        this.camelCache = {}\r\n        this.studlyCache = {}\r\n    }\r\n\r\n    ctypeLower(str) {\r\n        return /^[a-z]+$/.test(str)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} str\r\n     * @returns {String}\r\n     */\r\n    lcfirst(str) {\r\n        return str.charAt(0).toLowerCase() + str.substr(1)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} str1\r\n     * @param {String} str2\r\n     * @param {Number} length\r\n     * @returns {Number}\r\n     */\r\n    strncmp(str1, str2, length) {\r\n        str1 = str1.substring(0, length)\r\n        str2 = str2.substring(0, length)\r\n        return str1 === str2 ? 0 : (str1 > str2 ? 1 : -1)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} str\r\n     * @param {String} delimiters\r\n     * @returns {String}\r\n     */\r\n    ucwords(str, delimiters = '\\\\s\\\\t\\\\r\\\\n\\\\f\\\\v') {\r\n        return str.replace(new RegExp('(^(.)|[' + delimiters + ']+(.))', 'g'), $1 => $1.toUpperCase())\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} subject\r\n     * @param {String} search\r\n     * @returns {String}\r\n     */\r\n    after(subject, search) {\r\n        if (search === '') {\r\n            return subject\r\n        }\r\n        const position = subject.indexOf(search)\r\n        if (position === -1) {\r\n            return subject\r\n        }\r\n        return subject.substr(position + search.length)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} subject\r\n     * @param {String} search\r\n     * @returns {String}\r\n     */\r\n    afterLast(subject, search) {\r\n        if (search === '') {\r\n            return subject\r\n        }\r\n\r\n        const position = subject.lastIndexOf(search)\r\n        if (position === -1) {\r\n            return subject\r\n        }\r\n        return subject.substr(position + search.length)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} subject\r\n     * @param {String} search\r\n     * @returns {String}\r\n     */\r\n    before(subject, search) {\r\n        return search === '' ? subject : subject.split(search)[0]\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} subject\r\n     * @param {String} search\r\n     * @returns {String}\r\n     */\r\n    beforeLast(subject, search) {\r\n        if (search === '') {\r\n            return subject\r\n        }\r\n\r\n        const position = subject.lastIndexOf(search)\r\n        if (position === -1) {\r\n            return subject\r\n        }\r\n        return subject.substr(0, position)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} subject\r\n     * @param {String} from\r\n     * @param {String} to\r\n     * @returns {String}\r\n     */\r\n    between(subject, from, to) {\r\n        if (from === '' || to === '') {\r\n            return subject\r\n        }\r\n\r\n        return this.beforeLast(this.after(subject, from), to)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} value\r\n     * @returns {String}\r\n     */\r\n    camel(value) {\r\n        if (value in this.camelCache) {\r\n            return this.camelCache[value]\r\n        }\r\n\r\n        return this.camelCache[value] = this.lcfirst(this.studly(value))\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} haystack\r\n     * @param {String[]|String} needles\r\n     * @returns {boolean}\r\n     */\r\n    contains(haystack, needles) {\r\n        if (typeof needles === 'string') {\r\n            needles = [needles]\r\n        }\r\n        return needles.some(needle => needle !== '' && haystack.indexOf(needle) !== -1)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} haystack\r\n     * @param {String[]} needles\r\n     * @returns {boolean}\r\n     */\r\n    containsAll(haystack, needles) {\r\n        return needles.every(needle => this.contains(haystack, needle))\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} haystack\r\n     * @param {String[]|String} needles\r\n     * @returns {boolean}\r\n     */\r\n    endsWith(haystack, needles) {\r\n        if (typeof needles === 'string') {\r\n            needles = [needles]\r\n        }\r\n        return needles.some(\r\n            needle => needle !== '' && needle !== null\r\n                && haystack.substr(-needle.length) === needle,\r\n        )\r\n    }\r\n\r\n    snake(value, delimiter = '_') {\r\n        const key = value\r\n\r\n        if (key in this.snakeCache) {\r\n            if (delimiter in this.snakeCache[key]) {\r\n                return this.snakeCache[key][delimiter]\r\n            }\r\n        }\r\n        else {\r\n            this.snakeCache[key] = {}\r\n        }\r\n\r\n        if (!this.ctypeLower(value)) {\r\n            value = this.ucwords(value).replace(/\\s+/u, '')\r\n\r\n            value = value.replace(/(.)(?=[A-Z])/u, '$1' + delimiter).toLowerCase()\r\n        }\r\n\r\n        return this.snakeCache[key][delimiter] = value\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} haystack\r\n     * @param {String[]|String} needles\r\n     * @returns {boolean}\r\n     */\r\n    startsWith(haystack, needles) {\r\n        if (typeof needles === 'string') {\r\n            needles = [needles]\r\n        }\r\n        return needles.some(\r\n            needle => needle !== '' && needle !== null\r\n                && this.strncmp(haystack, needle, needle.length) === 0,\r\n        )\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} value\r\n     * @returns {String}\r\n     */\r\n    studly(value) {\r\n        const key = value\r\n\r\n        if (key in this.studlyCache) {\r\n            return this.studlyCache[key]\r\n        }\r\n\r\n        value = this.ucwords(value.replace(/[-_]/g, ' '))\r\n\r\n        return this.studlyCache[key] = value.replace(/\\s+/g, '')\r\n    }\r\n}\r\n\r\nexport default new Str()"],"file":"str.js"}